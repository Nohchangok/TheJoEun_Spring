<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<bean id="boy" class="springAop0205.aop.Boy"></bean>
	<bean id="girl" class="springAop0205.aop.Girl"></bean>
	<bean id="myAspect" class="springAop0205.aop.MyAspect"></bean>

	<!-- 공통관심 사항으로 쓸 aspect를 등록해줘야 한다. -->
	<aop:config>
		<aop:aspect ref="myAspect">
 		<aop:pointcut expression="execution(public String *.doSomething())" id="myPt"/>
<!--		핵심기능이 실행되기 전에 aspect에 있는 before메소드를 호출하겠다.
		<aop:before method="before" pointcut-ref="myPt"/>
		
		after라는 메소드를 핵심기능의 메소드가 실행되고 나서 실행하겠다.
		<aop:after method="after" pointcut-ref="myPt"/>
		
		after-returning 리턴이되고나서~ 정상적일 때.
		<aop:after-returning method="afterReturn" pointcut-ref="myPt" returning="msg"/>
		
		after-throwing 예외가 발생했을 때
		<aop:after-throwing method="afterThrow" pointcut-ref="myPt" throwing="th"/> -->
		<aop:around method="around" pointcut-ref="myPt"/>
		
		</aop:aspect>
	</aop:config>
	<!-- 아직 핵심 기능에 연결하는 것을 정의하지 않았다. -->
	<!--  포인트컷으로 연결 정의를 한다. -->
</beans>
